package com.thinkgem.jeesite.modules.mobile.Test;


import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.junit.Test;
import org.springframework.util.Base64Utils;

import java.io.*;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;

/**
 *接口测试
 * @author 刘智科
 * @version 2018-5-16
 */

public class MobileTest2  {
    /**
     * 测试上传头像
     */
    @Test
      public void uploadHeadPortrait() {
        String url = "http://47.106.109.187:80/yunbiji/headPortrait?type=1";
          HttpPost httpPost = new HttpPost(url);
          CloseableHttpClient client = HttpClients.createDefault();
        String fileUrl = "C:/Users/007/Desktop/20180608165800_653.jpg";
          String boundary = "-------------------------7e020233150564";//编节符
          String prefix = "--";//前缀 上传时需要多出两个-- 一定需要注意！！！
          String end = "\r\n";//这里也需要注意，在html协议中，用 “/r/n” 换行，而不是 “/n”。
          try {
              URL http = new URL(url);
              HttpURLConnection conn = (HttpURLConnection) http.openConnection();
              conn.setRequestMethod("POST");
              conn.setReadTimeout(5000);
              conn.setDoInput(true);//准许向服务器读数据
              conn.setDoOutput(true);//准许向服务器写入数据

              /*设置向服务器上传数据的请求方式  默认的是表单形式
               * 通过Content-Type协议向服务器上传数据
               * boundary
               * */
              conn.setRequestProperty("token", "805e1e924eb44dacb898a8f0fc44f8e1");
              conn.setRequestProperty("Content-Type", "multipart/form-data;boundary=" + boundary);

              //创建一个输出流对象，
              DataOutputStream out = new DataOutputStream(conn.getOutputStream());
            /*
            *
              -----------------------------7e020233150564
              Content-Disposition: form-data; name="file"; filename="I:\迅雷下载\18fb1f51c9eb63489cce9e029154782e.jpg"
              Content-Type: image/jpeg
                                        //这里是空一行  需要注意
              <二进制文件数据未显示>
              ---------------------------7e020233150564--
              */
              //向服务器写入数据  这里就需要完全根据以上协议格式来写，需要仔细，避免出错。
              out.writeBytes(prefix + boundary + end);//这是第一行  并回车换行
              //这是第二行，文件名和对应服务器的
              out.writeBytes("Content-Disposition: form-data; name=\"file\"; filename=\"" + fileUrl + "\"" + end);//这是第二行
              out.writeBytes(end);//空一行
              //以下写入图片
              FileInputStream fileInputStream = new FileInputStream(new File(fileUrl));
              byte[] b = new byte[1024 * 4];//缓冲区
              int len;
              //循环读数据
              while ((len = fileInputStream.read(b)) != -1) {
                  out.write(b, 0, len);
              }
              //写完数据后 回车换行
              out.writeBytes(end);
              out.writeBytes(prefix + boundary + prefix + end);
              out.flush();//清空

              //创建一个输入流对象  获取返回的信息  是否上传成功
              BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));
              StringBuffer sb = new StringBuffer();
              String str;
              while ((str = reader.readLine()) != null) {
                  sb.append(str);
              }
              //关闭流信息
              if (out != null) out.close();
              if (reader != null) reader.close();

              System.out.print("返回结果：" + sb.toString());
          } catch (MalformedURLException e) {
              e.printStackTrace();
          } catch (IOException e) {
              e.printStackTrace();
          }
      }

    /**
     * 测试获取头像
     */
    @Test
    public void getHeadPortrait(){
        String url = "http://localhost:8080/yunbiji/getHeadPortrait";
        try {
            URL http = new URL(url);
            HttpURLConnection conn = (HttpURLConnection) http.openConnection();
            conn.setRequestMethod("POST");
            conn.setReadTimeout(5000);
            conn.setDoInput(true);//准许向服务器读数据
            conn.setDoOutput(true);//准许向服务器写入数据
            conn.setRequestProperty("token", "0434dbe95a8041bdba36a06d406c39d1");
            DataOutputStream out = new DataOutputStream(conn.getOutputStream());
            BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));
            StringBuffer sb = new StringBuffer();
            String str;
            while ((str = reader.readLine()) != null) {
                sb.append(str);
            }
            //关闭流信息
            if (out != null) out.close();
            if (reader != null) reader.close();

            System.out.print("返回结果：" + sb.toString());
        } catch (MalformedURLException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    /**
     * 测试获取区域
     */
    @Test
    public void getDmCountry(){
    /*    JSONObject jsonParam = new JSONObject();
        9         jsonParam.put("name", "admin");
        10         jsonParam.put("pass", "123456");
        11         StringEntity entity = new StringEntity(jsonParam.toString(),"utf-8");//解决中文乱码问题
        12         entity.setContentEncoding("UTF-8");
        13         entity.setContentType("application/json");
        14         httpPost.setEntity(entity);*/
        String url = "http://localhost:8080/loginBefore/getDmCountry?type=1";
        try {
            URL http = new URL(url);
            HttpURLConnection conn = (HttpURLConnection) http.openConnection();
            conn.setRequestMethod("POST");
            conn.setReadTimeout(5000);
            conn.setDoInput(true);//准许向服务器读数据
            conn.setDoOutput(true);//准许向服务器写入数据
            conn.setRequestProperty("token", "0434dbe95a8041bdba36a06d406c39d1");
            DataOutputStream out = new DataOutputStream(conn.getOutputStream());
            BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));
            StringBuffer sb = new StringBuffer();
            String str;
            while ((str = reader.readLine()) != null) {
                sb.append(str);
            }
            //关闭流信息
            if (out != null) out.close();
            if (reader != null) reader.close();

            System.out.print("返回结果：" + sb.toString());
        } catch (MalformedURLException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    /**
     * 测试redis
     */
    @Test
    public void testRedis() {
        byte[] x = {31, -117, 8, 0, 0, 0, 0, 0, 0, 0, -99, -101, 11, -104, -114, 101, 26, -57, -17, -9, 125, 27, 41, -121, 22, 29, -60, 69, -28, 20, 50, -19, -38, -107, -108, -35, -116, -106, 114, -88, 84, 58, -80, -45, 50, -52, -84, 70, 99, 102, -52, 76, -26, 27, 42, 68, 58, 58, -84, 84, 100, 69, 18, 87, -94, -91, -20, -58, -75, -21, 114, 8, -117, 84, -24, -92, -115, 88, 106, -73, -38, -48, 105, -91, 19, -5, -65, -33, -49, -5, 61, 51, 61, -17, -1, -103, 47, -82, -18, -18, 113, -3, 62, -13, -68, -9, -3, 62, -49, 115, 31, -98, -25, 91, 114, 80, 50, 74, 75, -92, -63, -16, -100, 81, 57, -103, 119, -108, -27, 23, 100, 102, -107, -108, -28, 84, -12, -51, 47, 45, 75, -116, -33, -39, 100, -42, 63, 114, -26, 4, -30, -11, -110, 83, 74, -13, 71, -25, 37, -118, 69, -92, 109, -7, 41, -8, 127, -41, -46, -111, 114, -73, -24, -97, 6, -31, -33, 27, -29, -105, -76, 24, 90, 52, 34, -77, -68, 96, 116, 97, 102, 97, -50, -24, -100, -30, -100, -36, -52, -68, -62, -78, -4, -78, -118, -52, 126, 69, -7, -123, 101, 61, -62, -97, -21, 28, 57, 114, -32, -10, 105, 83, -118, 125, -87, -47, 75, 50, -122, 22, 21, 20, -107, -12, -110, 26, -64, 21, -59, 121, 61, -91, 102, 113, 94, 97, 121, 126, 110, -39, 109, 96, -91, 101, 57, 101, 121, -67, -60, 75, 64, 42, 18, -59, -57, -89, -66, 124, 30, -58, -15, -69, -115, 11, 71, -11, -16, 99, 14, -44, -40, -16, 57, -126, 31, 81, 31, -1, 13, 2, -67, -117, -46, -101, 64, -53, 40, -3, 57, 104, 14, -93, -34, 87, -112, -66, -108, -26, 66, 90, 48, 42, 31, 64, 126, -96, -76, 28, 114, -104, 82, 88, 36, -33, 80, 58, 16, -29, 102, 80, 90, 6, -102, 69, -23, 10, -48, -121, 40, 125, 21, 116, 1, -91, -17, -127, -66, 64, -23, -5, -96, -85, 40, 93, -18, -4, -51, 83, 64, 103, 80, 122, 63, -24, -12, 88, 26, 68, 52, -111, -102, -92, 53, -61, 73, 90, 59, -10, -29, -104, 74, -34, 3, -48, -39, -12, -107, -30, -105, -55, 96, 74, -17, -127, 94, 67, -23, 104, 72, 93, 74, 111, -121, -116, -92, -76, 63, -28, 99, 74, -37, 67, -27, 49, 7, 36, -87, 113, 64, -61, 19, -85, 52, -7, -15, 35, 82, 95, 63, -98, -43, 44, 114, -128, 127, 58, -28, -126, 88, -86, 67, 29, -125, 106, 77, -23, 70, -88, -90, -108, -106, 64, -99, 73, 105, 35, -88, -102, -116, -54, 14, 124, -30, 123, 74, 103, -125, 30, -90, 20, -82, -16, 14, 82, -102, 0, -3, -110, -46, 49, 80, -89, 82, -6, -104, -53, 27, -14, 58, -44, 0, -89, -67, 115, 40, -67, 5, 106, 23, -91, 99, -95, -114, 83, 58, 21, -17, -67, 1, -91, -113, -128, 54, -95, 20, -10, 6, -51, 41, -67, 24, -76, 30, -75, -9, 0, -44, 23, -108, -2, 17, -22, 13, 74, 111, -123, -38, 120, 18, 52, -120, 40, 91, -31, -42, 4, -9, -16, 41, 111, 18, 53, 81, -23, 125, -108, -34, 9, -103, 71, 105, 41, -124, -102, -24, 13, -122, 106, 70, -23, -107, 80, 21, -108, -74, -90, -45, 33, -120, -88, 113, 64, -122, -37, 1, 126, 45, 72, 127, 54, -108, 95, -81, -46, 102, 98, -45, -74, -112, -73, 41, 109, 7, -7, -106, 61, 102, -110, -102, -57, -84, 81, -51, 123, -38, -19, 90, -44, -34, 62, -41, -78, -11, -49, -122, 116, -95, -12, -73, -112, 21, -108, -10, -61, -45, 118, -90, 70, -124, 52, 109, 95, 123, -120, -74, 126, 125, 106, -60, 12, -88, -85, 41, 93, 3, -75, -115, -46, 13, 120, -112, 58, 116, 74, -124, -44, 60, 102, -89, 74, -87, 90, 32, -55, 63, 126, -9, -85, 82, -113, -7, 29, -28, 80, 44, -43, -95, -114, 66, 62, -94, -12, 19, -56, 46, 74, -15, 32, -34, 58, 74, 31, -122, 44, -94, 20, -17, -55, -101, 76, 105, -72, -30, 24, -107, -41, 64, 7, 81, -6, 60, -24, -11, -108, 46, 0, -67, -122, -46, 103, -99, -12, 115, -48, 97, -12, -103, 127, 13, 25, 79, 41, -14, 7, 111, 14, -91, -102, -102, -83, -96, 84, 83, -77, -83, -108, -18, 54, -7, 67, 12, -35, -91, -101, 2, -91, -85, -95, -38, -69, -98, -39, -89, -98, -12, 122, 67, 13, -89, -12, 76, 40, -22, 13, 57, 4, 53, -115, -46, 127, 65, -51, -94, 116, 15, -44, 51, -108, 126, 6, -75, -100, 62, 85, 43, -88, 85, -108, 34, 79, -13, -41, 80, -70, 20, 106, 11, -91, 72, -112, -93, 16, 24, 67, -11, -87, -34, -95, -12, 127, -110, -118, 0, 49, 116, -81, -92, -74, -27, 24, 58, 13, 106, 3, -91, -105, 56, 125, -11, 33, -44, 125, -108, 46, -126, 42, -92, 20, -39, -78, -97, 75, 41, 118, -90, 40, -48, -60, -48, 9, 80, 9, 74, -105, 65, 45, -93, 84, 125, -11, 57, -75, -73, 11, -74, -58, 14, -108, 22, -127, 14, -96, -12, 65, -48, 18, 74, 53, -75, 26, -29, 122, 11, -63, 88, 74, 81, -76, 5, -93, 40, -83, 3, -102, 77, -19, 93, 9, -38, -113, -46, 2, -105, 69, 14, 26, 68, -44, -124, -111, 58, 97, 24, -119, -30, 89, -9, -67, -57, -11, -29, 89, -35, 66, -90, -103, 69, 87, -13, -46, 126, 68, 53, -80, -62, -15, -2, 40, 74, 27, -101, -55, 98, 83, -17, -33, 80, 61, 40, 125, 6, -86, 57, -91, 67, 33, -33, 80, -118, -84, -60, 123, -115, 81, -7, 22, -12, 105, 74, -33, 21, -45, 89, -80, -23, 38, -48, 108, 74, 55, -104, 48, -14, -109, 104, 16, 81, -13, 90, 106, 85, 73, 66, -84, -41, -94, -5, -99, 108, -93, 67, 125, 1, -39, 65, -35, 83, 27, -6, 107, 74, -15, -109, 119, 57, -91, -27, -112, -7, -108, -50, -126, -54, -96, -12, 105, -88, -127, -108, -50, -124, 122, -126, -46, 113, 80, 127, -89, 20, 117, -72, -65, -98, -71, 54, 73, 89, 49, 97, -69, 22, 27, 81, -86, 46, -75, 93, -85, 93, -115, 99, -108, -66, 2, -11, 11, 74, 43, 109, -68, 49, 20, 105, -122, -65, -121, -46, -113, 97, 75, -4, 42, 117, -45, 32, -94, 44, 75, -73, 29, -16, 59, 73, -59, -1, -104, -95, -14, -96, 6, 81, -118, -35, -44, 127, -124, 82, -51, 59, 118, 83, -70, 30, 106, 63, 53, 34, -92, -58, -120, 83, -85, 49, -30, 107, -4, -75, 15, 29, 10, 127, -9, -81, -93, -45, -23, 10, -88, 9, -108, -34, 43, -87, 64, 21, 67, 49, 63, -94, 100, 34, -122, -66, 0, -75, -106, 78, -44, -112, 26, 19, 27, 84, 105, -21, -40, 91, -77, 86, -82, -15, -2, -14, 79, -48, -9, 41, -43, 22, -55, 58, 74, 115, 93, -85, -36, -65, 20, 116, 34, -91, 40, 69, 61, 26, 18, -68, 61, 78, -70, 74, 76, 29, 111, 83, 109, 9, 45, -95, 116, -102, -26, 91, -108, 62, 1, -43, -103, -46, 37, 80, -9, 82, -70, 14, -118, -6, -54, 123, 27, -22, 67, 74, 15, 66, -47, 64, -91, -123, 121, 16, 80, -38, -47, -7, 111, 53, -57, 59, -62, -90, 82, -110, -90, -67, -25, 121, 59, -95, -57, 81, 35, 80, 120, 9, 95, 15, -13, -95, -25, 81, -102, 13, -3, 10, -91, 63, -125, -26, -69, -23, 102, 124, -30, -105, -108, -66, 4, -38, -109, 110, 23, 33, 77, 123, -69, -16, -16, 38, -124, -18, 91, 94, 3, -24, -23, -108, -74, -128, 126, -100, -46, -98, -48, 47, 82, 90, 1, -3, -87, 43, -82, -55, 65, 102, 98, -110, 26, 19, 79, -85, 102, 71, 92, 8, -7, 19, -11, 38, -14, 45, -103, 75, 41, 10, 100, 89, 73, -23, 54, -56, 81, 106, 68, 6, -92, 63, -91, 122, 26, -77, -108, 82, 45, -82, -33, -94, -12, 55, -70, -4, -88, 123, 66, -102, 126, -64, -64, 52, -10, 70, 80, 19, -107, 22, 82, -6, -100, -104, -61, 12, -101, 106, 29, 79, -33, -79, 104, -99, 71, 19, -35, -112, -98, 79, 39, 121, 72, -45, 15, -20, 90, 52, -42, -91, 67, -23, 22, -55, 115, -105, -25, -95, 120, 94, -84, -63, -103, 103, -36, 74, -73, 59, 3, -5, -10, -12, -115, -64, 79, -87, -61, 12, 123, 40, 13, -35, 23, 81, 58, 64, 82, -75, 109, 12, 29, 5, 69, -77, 102, 61, 84, -16, -23, 100, 75, 82, 99, 68, -53, -48, -120, -24, 49, 37, -7, 75, 46, 31, 23, 25, -31, 15, -122, -76, -117, -91, -70, -75, 99, -49, 76, -99, 65, -40, 84, -73, -10, -6, -116, 106, 83, -63, -5, -127, 82, -99, -58, 31, 81, -118, 34, -47, -5, 39, -93, -14, 37, -24, 118, 74, 81, -80, 122, -81, 83, -86, -63, 121, 7, -91, -109, 42, -83, 99, -101, 62, 10, -6, 21, -91, 111, 64, 117, -96, 22, -99, 35, -90, -13, 109, -45, 107, -96, 30, -93, -76, 24, -22, 111, -108, 78, -128, -94, -66, -46, 35, -121, -88, 93, 17, 67, 49, 13, -125, -45, 40, 109, 8, 122, 14, -75, -9, 93, 39, -99, 7, 90, -101, 82, 4, 27, -1, 123, 74, -121, -120, 57, -21, -79, -87, -50, -55, -61, -108, 14, -121, 58, 74, 41, -10, -114, -96, 5, -91, -97, -126, 102, 81, 111, -44, 7, -19, 75, 105, 51, 39, 109, 10, -38, -99, -114, -117, -107, 18, -100, 75, -87, -90, -124, 123, 41, 29, 12, -11, 20, -91, 23, 64, -35, 70, -23, 121, 80, -65, -113, -91, 65, 68, -51, 70, 114, 122, -107, -35, -80, -22, -57, 53, 111, -47, 98, 117, 45, 117, -64, -22, 74, 25, -77, 77, -75, -97, -50, -89, -65, 102, -22, -109, 41, -43, -51, 96, 54, -35, -94, 26, 85, -118, 120, 54, -67, 72, 76, 125, 105, 83, -51, 122, 87, 59, -23, 58, -26, -68, 36, 101, -95, -60, 118, -34, 92, 117, 17, 53, 113, 89, -91, -36, -61, -90, 31, 64, 93, 74, 31, -77, -82, -104, -29, 40, -101, 34, -21, -11, 95, -94, 70, -124, -108, 29, 71, 89, 70, -56, 22, 49, -3, 26, 107, 40, -47, 83, -126, -31, -44, 8, -28, -75, -34, 123, -108, 94, 40, -26, 112, -33, 122, -52, 36, 101, -23, -107, -3, -104, 15, 65, 62, -95, -113, 57, 69, 76, -94, 107, 83, 77, -81, 26, 82, -70, 11, -76, -120, 82, -67, -49, -13, -20, 73, -48, 32, -94, -23, -101, -88, -7, -8, 98, 58, -44, 34, -56, 122, -41, -125, -92, 10, 33, -5, 77, 104, 26, -36, -125, -46, 49, 98, -50, -73, 109, -86, 125, -128, -5, -23, 91, 12, 41, -85, 33, 44, 19, -61, -110, 99, 22, 29, 106, 44, 52, -35, 20, -68, -59, 98, -82, -46, -40, -12, 63, -112, 51, -24, -118, 57, -53, 53, -115, 125, 20, 96, 30, -35, -115, -3, -106, -110, 58, 100, -5, 73, 52, -120, 40, 43, -93, 109, -9, 96, -75, 9, 95, 109, -38, -77, 45, -91, 15, -46, 74, 76, 1, 102, 83, -92, 12, -78, -97, -46, 59, 52, 20, 82, 58, 78, 83, 59, 39, -67, -111, 58, 32, -92, 105, -17, -88, 122, 12, 47, 37, 116, -88, 60, -24, 71, 41, 125, 82, 76, 41, 108, -45, 53, 24, -96, 43, -91, 26, -24, -18, -90, 70, -124, 52, -19, 117, -20, -73, -122, -90, -31, 91, 99, 76, -86, 85, 98, -45, -101, -96, 105, 90, -24, -21, -115, -80, -53, 40, 29, 70, 87, -86, -46, 63, -128, 78, -95, 38, -122, -44, -104, 120, 110, -107, -42, -95, 101, -94, -88, -119, -105, -48, -51, 72, -89, 34, -115, 109, -46, 30, -46, -121, -46, 94, -112, 124, 74, 39, 66, -24, 86, -91, -71, -68, -52, -92, -53, -89, -83, 56, 22, -120, -26, -29, 66, -9, 0, -67, 90, 34, 79, 58, 95, 41, 77, -124, -4, 34, -24, 7, 40, -99, 12, 61, -122, -46, -39, -48, -123, -108, 62, 5, 61, -124, -46, 121, -48, 3, 41, -59, -58, 45, 52, -13, -11, -111, -127, -54, 21, -82, -60, 79, -82, -92, 84, -19, -19, 79, -87, 30, 30, -27, -46, 55, -72, 28, -110, -96, 20, 19, 92, -30, -89, -80, -46, 14, 98, -6, -120, 54, 109, 3, -103, -49, -90, 127, -110, -102, -23, 95, -69, -102, 72, -35, 4, 50, -102, 14, 117, 49, -124, 22, -115, -38, 37, 16, -70, 17, -55, 90, 72, 115, 74, -113, 65, -22, 81, -41, 34, 47, -106, 58, -108, -34, 12, 125, 22, -91, -38, 71, -20, 66, -87, 78, 82, -70, 103, -123, -9, 99, -97, 115, -46, -8, 26, 34, -120, 104, -38, 1, 82, -21, 68, 121, -107, -70, 103, 4, 100, 39, -91, 15, -30, 87, -44, 114, -43, 107, -47, -27, -96, 24, -70, 17, 116, 51, -91, -101, -95, 90, -71, -2, -83, 31, 95, 69, 6, 17, 77, 59, -127, 10, -81, 106, -57, 79, 99, 29, 74, -29, -8, 2, -89, 3, -74, 80, -70, 64, -52, -75, 86, -101, -66, 8, -43, -101, -46, 21, 80, 19, 93, -82, -11, 23, -98, 4, 13, 34, -102, -2, -4, 64, -8, -12, -69, -47, -95, -76, 125, 71, -45, 96, -115, 45, -87, 83, 59, -101, -2, 69, -52, 93, 85, -101, -18, 119, 118, 40, -80, 108, -125, 107, -23, 2, -87, 101, 46, 114, -60, 44, -112, -112, -90, 93, -49, -21, 104, 126, 1, -35, -42, 51, 32, 35, 40, -43, -118, -20, 46, 74, -43, 121, -76, 58, -15, -11, -116, -100, 54, -84, 52, 11, 12, 58, 82, 90, 8, 122, 53, -91, -88, 93, -126, 91, 41, -43, 102, -41, 45, 52, -85, 9, -87, 113, 94, 99, 119, 86, -29, 105, 23, 106, -85, -85, -120, -14, -23, -30, -14, 116, -72, 123, -24, 12, 120, 19, -118, 70, 121, -7, -77, -104, -29, 67, -101, -50, 17, 71, -105, 81, -12, -54, -60, 74, -25, -84, -35, 71, 41, 10, -118, -96, 38, -75, 8, -31, 36, 56, -97, -46, 4, -24, -81, 40, -3, 43, 40, 77, 84, -75, -112, 9, 120, -17, -93, -87, 115, -78, 116, 6, -67, -112, -46, 44, -48, -74, -108, 118, 7, -115, -17, -87, -97, -88, 2, 29, -10, -66, 3, -38, -108, 82, -124, -49, -128, 118, -36, -67, -70, 46, -117, 100, 46, 40, -33, -107, -78, 65, 111, -96, -76, -109, -71, -86, 21, 67, -111, -91, 7, -15, -99, -62, 19, 89, 122, 16, 31, -15, -126, -120, -102, -91, -45, -88, -102, -91, -13, 22, 62, -50, 19, -58, -83, -96, 116, 91, -10, -90, 59, -89, 82, 87, -25, -42, -6, 89, -91, -117, 43, 54, 93, 15, -22, 83, -86, 71, 82, -68, 97, -67, 80, -52, 121, -115, 77, 95, 118, 45, 59, -81, -103, -104, -69, 72, 54, -43, 11, 32, 83, 41, -43, 91, -84, -109, -24, 36, 109, 9, -71, -109, -46, -85, 32, -59, -108, -34, 0, 25, 70, -87, 30, 102, -36, 76, -87, 30, -124, 116, -94, -49, -84, -37, 76, 93, 74, -5, -118, -7, -78, -115, -19, -55, -61, -110, -70, 43, 30, 67, -105, -118, -21, 88, 8, -98, 116, 28, 41, 105, 111, -22, 77, 39, -91, -67, 75, 7, 13, 34, -102, 126, 80, -42, -105, -58, -9, 44, -3, -18, 69, -4, -62, 82, -25, 97, 10, 123, -12, -52, 69, 79, -126, 60, -38, -42, -47, -5, 98, -43, 56, -113, -25, -76, -40, 73, -67, 77, -108, -74, 115, -46, 54, -108, 6, 17, 77, -69, -42, -14, -81, -121, -94, -39, -93, -33, 71, -37, -16, -108, 106, 127, -102, 6, 101, 15, 57, -83, 55, -104, -46, 126, -82, -82, 87, 120, 9, -108, -82, 7, 89, 44, -26, 107, -98, 54, 45, 0, 61, -101, -46, 107, 93, -115, 76, -23, 13, 74, 107, -68, -112, -58, 123, 50, -120, -88, 113, 124, -101, 106, -50, -104, -11, -2, 3, -97, -75, 74, 121, 44, -19, 8, 26, -33, -6, 87, -41, 30, 21, 71, -89, -50, 123, 28, 122, 3, -91, -120, -1, -78, -120, 58, 96, -97, -104, -85, 52, 54, -43, 14, -31, -61, -108, -94, -76, 18, -70, -15, -22, -75, 69, -31, -7, -99, -46, -15, -82, 80, 34, -76, 60, 10, 47, 7, -15, 112, -96, 29, 47, -98, 117, 30, -126, -114, 63, -50, -46, -73, 112, 25, 52, 13, 97, -6, 29, 104, -95, 39, -108, -38, 106, 116, 52, -116, 49, -123, -27, 0, -91, -38, 106, -8, -81, 43, -108, -56, 119, -44, 34, 61, 84, -28, 45, -114, 105, -82, 89, -25, -27, 67, -24, 121, 109, -8, -123, 89, -38, 89, -12, -122, 64, -8, -55, -60, 76, 87, 40, 9, -65, -90, -47, -120, -38, -37, 67, -52, 55, -70, 108, -86, 95, -120, 24, 73, -87, 6, 86, -34, 59, -44, -117, -123, 51, 40, -35, 4, -95, -83, 2, 95, -17, -118, -46, 4, -58, 47, -121, -48, -56, -31, 103, -118, -93, -86, 8, -81, 44, -46, 112, -81, -25, 52, -2, 33, -74, 69, 37, 105, 34, -15, 127, -125, 21, 17, 17, 121, 64, 0, 0};
        try {
            String str = Base64Utils.encodeToString(x);
            byte[] sendBytes = Base64Utils.decodeFromString(str);
            System.out.println();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }



}
